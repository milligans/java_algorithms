Java has two different types of variables: primitive and objects and only objects are reference types . This means that there are primitive types , originally designed for speed, that do not behave as objects. The primitive types exist either as local variables on the stack, or as fields (static or not) of objects. In Java, objects are always allocated on the heap : if you have a local variable that seems an object, then the object itself is allocated on the heap and the stack contains only a reference, i.e. an additional hidden type that is able to reference, point to, heap memory . Important to note that NOT to stack memory . As a result of this fact, you cannot dereference a primitive type because you cannot create a reference to something different than an object, primitive types are not objects.

